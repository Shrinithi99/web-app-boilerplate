{"version":3,"sources":["AddOrUpdateUser.js","FindUser.js","GetAllUsers.js","DeleteUser.js","App.js","reportWebVitals.js","index.js"],"names":["AddOrUpdateUser","props","onChange","e","setState","target","name","value","onSubmitAddOrUpdateUser","preventDefault","state","firstname","lastname","birthdate","email","age","phonenumber","axios","post","then","result","alert","data","this","onSubmit","htmlFor","type","Component","FindUser","renderAllUser","Object","keys","response","length","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","nodeId","label","onSubmitFindUser","email2","GetAllUsers","onSubmitGetAllUsers","map","user","_source","error","console","log","DeleteUser","onSubmitDeleteUser","email3","put","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d66b2c4.chunk.js","sourcesContent":["// Importing combination\nimport React, {Component} from 'react';\nimport axios from 'axios'\n \nclass AddOrUpdateUser extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            firstname: '',\n            lastname:'',\n            birthdate:'',\n            email: '',\n            age:'',\n            phonenumber:''\n          };\n    }\n    onChange = (e) => {\n        /*\n          Because we named the inputs to match their\n          corresponding values in state, it's\n          super easy to update the state\n        */\n        this.setState({ [e.target.name]: e.target.value });\n      }\n    \n    onSubmitAddOrUpdateUser = (e) => {\n        e.preventDefault();\n        // get our form data out of state\n        const {firstname, lastname, birthdate, email, age, phonenumber} = this.state;\n    \n        axios.post('/addOrUpdateUser', { firstname, lastname, email, birthdate, age, phonenumber})\n          .then((result) => {\n            \n            alert(result.data)\n            //access the results here....\n          });\n      }\n \n    render()\n    {const { firstname, lastname, email, birthdate, age, phonenumber} = this.state;\n     return(<div>\n        <h2>Add or Update User:</h2>\n        <form onSubmit={this.onSubmitAddOrUpdateUser}>\n        <label htmlFor=\"firstname\">Enter first name</label>\n        <input name=\"firstname\" type=\"text\" value={firstname} onChange={this.onChange}/>\n        <label htmlFor=\"lastname\">Enter last name</label>\n        <input name=\"lastname\" type=\"text\" value={lastname} onChange={this.onChange}/><br/><br/>\n        <label htmlFor=\"email\">Enter your email</label>\n        <input name=\"email\" type=\"text\" value={email} onChange={this.onChange}/>\n        <label htmlFor=\"birthdate\">Enter birthdate</label>\n        <input name=\"birthdate\" type=\"text\" value={birthdate} onChange={this.onChange}/><br/><br/>\n        <label htmlFor=\"age\">Enter age</label>\n        <input name=\"age\" type=\"number\" value={age} onChange={this.onChange}/>\n        <label htmlFor=\"phonenumber\">Enter phone number</label>\n        <input name=\"phonenumber\" type=\"number\" value={phonenumber} onChange={this.onChange}/><br/><br/>\n        <br/>\n        <button>Add/Update</button>\n       </form><br/>\n       </div>\n     );   \n  }\n} \n \n// Exporting the component\nexport default AddOrUpdateUser;","// Importing combination\nimport React, {Component} from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport axios from 'axios'\n\nclass FindUser extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            email2:'',\n            response:{}\n        };\n    }\n    onChange = (e) => {\n        /*\n          Because we named the inputs to match their\n          corresponding values in state, it's\n          super easy to update the state\n        */\n        this.setState({ [e.target.name]: e.target.value });\n      }\n      renderAllUser = () => {\n        if(Object.keys(this.state.response).length!=0){\n        \n        return (\n          \n            <TreeView\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n        >\n        <TreeItem nodeId=\"1\" label={this.state.response.email} >\n        <TreeItem nodeId=\"2\" label={\"name:\"+this.state.response.firstname+this.state.response.lastname} />\n        <TreeItem nodeId=\"3\" label={\"birthdate:\"+this.state.response.birthdate} />\n        <TreeItem nodeId=\"4\" label={\"age:\"+this.state.response.age}/>\n        <TreeItem nodeId=\"5\" label={\"phonenumber:\"+this.state.response.phonenumber}/>\n        </TreeItem>\n        </TreeView>\n          );\n        }\n        \n        };\n \n    onSubmitFindUser = (e) => {\n        e.preventDefault();\n        // get our form data out of state\n        const {email2} = this.state;\n        axios.post('/findUser',{email2})\n          .then((result) => {\n            let response= result.data\n            this.setState({response});\n            if(Object.keys(this.state.response).length==0){\n              alert('found none');\n            }\n           \n          });\n      }\n    render()\n    {const {email2}=this.state;\n            return(\n            <div>\n            <h2>Find User:</h2>\n            <form onSubmit={this.onSubmitFindUser}>\n             <label htmlFor=\"email2\">Enter your email</label>\n             <input name=\"email2\" type=\"text\" value={email2} onChange={this.onChange}/>\n             <button>Find</button><br/>\n             <div>{this.renderAllUser()}</div>  \n            </form><br/> \n            </div>\n        );\n  }\n} \n \n// Exporting the component\nexport default FindUser;","// Importing combination\nimport React, {Component} from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport axios from 'axios' \nclass GetAllUsers extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = { response:[] };\n    }\n    onChange = (e) => {\n        /*\n          Because we named the inputs to match their\n          corresponding values in state, it's\n          super easy to update the state\n        */\n        this.setState({ [e.target.name]: e.target.value });\n      }\n      \n      \n      onSubmitGetAllUsers = (e) => {\n        e.preventDefault();\n        // get our form data out of state\n        axios.post('/getAllUsers')\n          .then((result) => {\n            let response= result.data\n            \n            this.setState({response});\n          \n          });\n      }\n      renderAllUser = () => {try{\n        \n        const responseArray=this.state.response;\n        return (\n          responseArray.map((user) => (\n            <TreeView\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n        >\n        <TreeItem nodeId=\"1\" label={user._source.email} >\n        <TreeItem nodeId=\"2\" label={\"name:\"+user._source.firstname+user._source.lastname} />\n        <TreeItem nodeId=\"3\" label={\"birthdate:\"+user._source.birthdate} />\n        <TreeItem nodeId=\"4\" label={\"age:\"+user._source.age}/>\n        <TreeItem nodeId=\"5\" label={\"phonenumber:\"+user._source.phonenumber}/>\n        </TreeItem>\n        </TreeView>\n          )) \n        \n        );}catch(error){console.log(error)}\n        };\n \n    render()\n    {\n        return (\n          <div>  <h2>Get All Users</h2>\n       <form onSubmit={this.onSubmitGetAllUsers}>\n        <button>Get</button><br/>\n        <div>{this.renderAllUser()}</div>\n       </form></div>\n        );\n  }\n} \n \n// Exporting the component\nexport default GetAllUsers;","// Importing combination\nimport React, {Component} from 'react';\nimport axios from 'axios'\nclass DeleteUser extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            email3:''\n        };\n    }\n    onChange = (e) => {\n        /*\n          Because we named the inputs to match their\n          corresponding values in state, it's\n          super easy to update the state\n        */\n        this.setState({ [e.target.name]: e.target.value });\n      }\n    \n      onSubmitDeleteUser = (e) => {\n        e.preventDefault();\n        // get our form data out of state\n        const {email3} = this.state;\n    \n        axios.put('/deleteUser', { email3 })\n          .then((result) => {\n            \n            alert(result.data)\n            //access the results here....\n          });\n      }\n    render()\n    {const {email3}=this.state;\n            return(\n            <div>\n            <h2>Delete User:</h2>\n           <form onSubmit={this.onSubmitDeleteUser}>\n           <label htmlFor=\"email3\">Enter your email</label>\n           <input name=\"email3\" type=\"text\" value={email3} onChange={this.onChange}/>\n           <button>Delete</button>\n           </form><br/>\n            </div>\n        );\n  }\n} \n \n// Exporting the component\nexport default DeleteUser;","import React, { Component } from 'react';\nimport './App.css';\nimport AddOrUpdateUser from './AddOrUpdateUser.js';\nimport FindUser from './FindUser';\nimport GetAllUsers from './GetAllUsers';\nimport DeleteUser from './DeleteUser';\n\nclass App extends Component {\n  constructor() {\n    super();\n    \n  }\n    \n  render() {\n    return (\n      <div className=\"App\">\n        <AddOrUpdateUser/>\n        <FindUser/>\n       <DeleteUser/>\n       <GetAllUsers/>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}